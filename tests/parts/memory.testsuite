## -*- tcl -*-
## (c) 2017 Andreas Kupries
# # ## ### ##### ######## ############# #####################
## Test suite for memory stores, custom parts.
#
## The external procedures 'already' and 'badmethod' are used to
## generate implementation specific error messages. Implementations
## have to be provided by the invoking implementation-specific
## testsuite.
#
## The external procedures 'new-store' and 'release-store' are used to
## create and destroy an instance of the store under test.

# # ## ### ##### ######## ############# #####################

test [test-class]-1.0 {new, wrong#args, not enough} -body {
    path::memory new
} -returnCodes error -result {wrong # args: should be "path::memory new atomstore"}

test [test-class]-1.1 {new, wrong#args, too many} -body {
    path::memory new A X
} -returnCodes error -result {wrong # args: should be "path::memory new atomstore"}

test [test-class]-1.2 {create, wrong#args, not enough} -body {
    path::memory create foo
} -returnCodes error -result {wrong # args: should be "path::memory create foo atomstore"}

test [test-class]-1.3 {create, wrong#args, too many} -body {
    path::memory create foo A X
} -returnCodes error -result {wrong # args: should be "path::memory create foo atomstore"}

test [test-class]-1.4 {constructor, create, existing command} -setup {
    atom::memory create test-atom-store
    path::memory create test-memory-store test-atom-store
} -body {
    path::memory create test-memory-store test-atom-store
} -cleanup {
    test-memory-store destroy
    test-atom-store destroy
} -returnCodes error -result [already test-memory-store]

test [test-class]-1.5 {constructor, create, existing command} -setup {
    atom::memory create test-atom-store
} -body {
    path::memory create set test-atom-store
} -cleanup {
    test-atom-store destroy
} -returnCodes error -result [already set]

test [test-class]-1.6 {constructor, create} -setup {
    atom::memory create test-atom-store
    set result {}
} -body {
    lappend result [path::memory create test-memory-store test-atom-store]
    lappend result [info commands ::test-memory-store]
    lappend result [test-memory-store size]
} -cleanup {
    test-memory-store destroy
    test-atom-store destroy
    unset result
} -result {::test-memory-store ::test-memory-store 0}

test [test-class]-1.7 {constructor, new} -setup {
    atom::memory create test-atom-store
    set result {}
} -body {
    lappend result [set foo [path::memory new test-atom-store]]
    lappend result [info commands ::$foo]
    lappend result [$foo size]
} -cleanup {
    $foo destroy
    test-atom-store destroy
    unset result foo
} -match glob -result {::oo::Obj* ::oo::Obj* 0}

# # ## ### ##### ######## ############# #####################
return
